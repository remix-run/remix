{
  "name": "@remix-run/multipart-parser",
  "version": "0.12.0",
  "description": "A fast, efficient parser for multipart streams in any JavaScript environment",
  "author": "Michael Jackson <mjijackson@gmail.com>",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/remix-run/remix.git",
    "directory": "packages/multipart-parser"
  },
  "homepage": "https://github.com/remix-run/remix/tree/main/packages/multipart-parser#readme",
  "license": "MIT",
  "files": [
    "LICENSE",
    "README.md",
    "dist",
    "src",
    "!src/**/*.test.ts"
  ],
  "type": "module",
  "exports": {
    ".": "./src/index.ts",
    "./node": "./src/node.ts",
    "./package.json": "./package.json"
  },
  "publishConfig": {
    "exports": {
      ".": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.js"
      },
      "./node": {
        "types": "./dist/node.d.ts",
        "default": "./dist/node.js"
      },
      "./package.json": "./package.json"
    }
  },
  "dependencies": {
    "@remix-run/headers": "workspace:^"
  },
  "devDependencies": {
    "@types/node": "^24.6.0",
    "esbuild": "^0.25.10"
  },
  "scripts": {
    "bench": "pnpm run bench:node && pnpm run bench:bun && pnpm run bench:deno",
    "bench:bun": "bun run ./bench/runner.ts",
    "bench:deno": "deno run --allow-sys ./bench/runner.ts",
    "bench:node": "node --disable-warning=ExperimentalWarning ./bench/runner.ts",
    "build": "pnpm run clean && pnpm run build:types && pnpm run build:esm && pnpm run build:esm:node",
    "build:esm": "esbuild src/index.ts --bundle --outfile=dist/index.js --format=esm --platform=neutral --sourcemap",
    "build:esm:node": "esbuild src/node.ts --bundle --outfile=dist/node.js --format=esm --platform=node --sourcemap",
    "build:types": "tsc --project tsconfig.build.json",
    "clean": "rm -rf dist",
    "prepublishOnly": "pnpm run build",
    "test": "node --disable-warning=ExperimentalWarning --test './src/**/*.test.ts'",
    "typecheck": "tsc --noEmit"
  },
  "keywords": [
    "multipart",
    "parser",
    "stream",
    "http"
  ]
}
