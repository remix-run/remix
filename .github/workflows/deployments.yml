name: 🚀 Deployment Tests

on:
  workflow_call:
    secrets:
      TEST_AWS_ACCESS_KEY_ID:
        required: true
      TEST_AWS_SECRET_ACCESS_KEY:
        required: true
      TEST_CF_ACCOUNT_ID:
        required: true
      TEST_CF_GLOBAL_API_KEY:
        required: true
      TEST_CF_EMAIL:
        required: true
      TEST_CF_PAGES_API_TOKEN:
        required: true
      TEST_CF_API_TOKEN:
        required: true
      TEST_DENO_DEPLOY_TOKEN:
        required: true
      TEST_FLY_TOKEN:
        required: true
      TEST_NETLIFY_TOKEN:
        required: true
      TEST_VERCEL_TOKEN:
        required: true
      TEST_VERCEL_USER_ID:
        required: true

jobs:
  arc_deploy:
    name: Architect Deploy
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: npm
          cache-dependency-path: ./scripts/deployment-test/package.json # no lockfile, key caching off package.json

      # some deployment targets require the latest version of npm
      # TODO: remove this eventually when the default version we get
      # is "latest" enough.
      - name: 📦 Install latest version of npm
        run: npm install -g npm@latest
        working-directory: ./scripts/deployment-test

      - name: 📥 Install deployment-test deps
        run: npm install
        working-directory: ./scripts/deployment-test

      - name: 🚀 Deploy to Arc
        run: node ./arc.mjs
        working-directory: ./scripts/deployment-test
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}

  cf_pages_deploy:
    name: "CF Pages Deploy"
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: npm
          cache-dependency-path: ./scripts/deployment-test/package.json # no lockfile, key caching off package.json

      # some deployment targets require the latest version of npm
      # TODO: remove this eventually when the default version we get
      # is "latest" enough.
      - name: 📦 Install latest version of npm
        run: npm install -g npm@latest
        working-directory: ./scripts/deployment-test

      - name: 📥 Install deployment-test deps
        run: npm install
        working-directory: ./scripts/deployment-test

      - name: 🚀 Deploy to Cloudflare Pages
        run: node ./cf-pages.mjs
        working-directory: ./scripts/deployment-test
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.TEST_CF_ACCOUNT_ID }}
          CLOUDFLARE_GLOBAL_API_KEY: ${{ secrets.TEST_CF_GLOBAL_API_KEY }}
          CLOUDFLARE_EMAIL: ${{ secrets.TEST_CF_EMAIL }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.TEST_CF_PAGES_API_TOKEN }}

  cf_workers_deploy:
    name: "CF Workers Deploy"
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: npm
          cache-dependency-path: ./scripts/deployment-test/package.json # no lockfile, key caching off package.json

      # some deployment targets require the latest version of npm
      # TODO: remove this eventually when the default version we get
      # is "latest" enough.
      - name: 📦 Install latest version of npm
        run: npm install -g npm@latest
        working-directory: ./scripts/deployment-test

      - name: 📥 Install deployment-test deps
        run: npm install
        working-directory: ./scripts/deployment-test

      - name: 🚀 Deploy to Cloudflare Workers
        run: node ./cf-workers.mjs
        working-directory: ./scripts/deployment-test
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.TEST_CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.TEST_CF_API_TOKEN }}
          CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
          CLOUDFLARE_GLOBAL_API_KEY: ${{ secrets.CLOUDFLARE_GLOBAL_API_KEY }}

  # "deploy deploy" is not a typo, we are deploying to Deno Deploy
  deno_deploy_deploy:
    name: "Deno Deploy Deploy"
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: npm
          cache-dependency-path: ./scripts/deployment-test/package.json # no lockfile, key caching off package.json

      # some deployment targets require the latest version of npm
      # TODO: remove this eventually when the default version we get
      # is "latest" enough.
      - name: 📦 Install latest version of npm
        run: npm install -g npm@latest
        working-directory: ./scripts/deployment-test

      - name: 📥 Install deployment-test deps
        run: npm install
        working-directory: ./scripts/deployment-test

      - name: 🦕 Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: vx.x.x
      - name: 🦕 Deno Deploy CLI
        run: deno install --allow-read --allow-write --allow-env --allow-net --allow-run --no-check -r -f https://deno.land/x/deploy/deployctl.ts

      - name: 🚀 Deploy to Deno Deploy
        run: node ./deno-deploy.mjs
        working-directory: ./scripts/deployment-test
        env:
          DENO_DEPLOY_TOKEN: ${{ secrets.TEST_DENO_DEPLOY_TOKEN }}

  fly_deploy:
    name: "Fly Deploy"
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: npm
          cache-dependency-path: ./scripts/deployment-test/package.json # no lockfile, key caching off package.json

      # some deployment targets require the latest version of npm
      # TODO: remove this eventually when the default version we get
      # is "latest" enough.
      - name: 📦 Install latest version of npm
        run: npm install -g npm@latest
        working-directory: ./scripts/deployment-test

      - name: 📥 Install deployment-test deps
        run: npm install
        working-directory: ./scripts/deployment-test

      - name: 🎈 Install the Fly CLI
        run: curl -L https://fly.io/install.sh | FLYCTL_INSTALL=/usr/local sh

      - name: 🚀 Deploy to Fly
        run: node ./fly.mjs
        working-directory: ./scripts/deployment-test
        env:
          FLY_API_TOKEN: ${{ secrets.TEST_FLY_TOKEN }}

  netlify_deploy:
    name: "Netlify Deploy"
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: npm
          cache-dependency-path: ./scripts/deployment-test/package.json # no lockfile, key caching off package.json

      # some deployment targets require the latest version of npm
      # TODO: remove this eventually when the default version we get
      # is "latest" enough.
      - name: 📦 Install latest version of npm
        run: npm install -g npm@latest
        working-directory: ./scripts/deployment-test

      - name: 📥 Install deployment-test deps
        run: npm install
        working-directory: ./scripts/deployment-test

      - name: 🚀 Deploy to Netlify
        run: node ./netlify.mjs
        working-directory: ./scripts/deployment-test
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.TEST_NETLIFY_TOKEN }}

  vercel_deploy:
    name: "Vercel Deploy"
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: npm
          cache-dependency-path: ./scripts/deployment-test/package.json # no lockfile, key caching off package.json

      # some deployment targets require the latest version of npm
      # TODO: remove this eventually when the default version we get
      # is "latest" enough.
      - name: 📦 Install latest version of npm
        run: npm install -g npm@latest
        working-directory: ./scripts/deployment-test

      - name: 📥 Install deployment-test deps
        run: npm install
        working-directory: ./scripts/deployment-test

      - name: 🚀 Deploy to Vercel
        run: node ./vercel.mjs
        working-directory: ./scripts/deployment-test
        env:
          VERCEL_TOKEN: ${{ secrets.TEST_VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.TEST_VERCEL_USER_ID }}
